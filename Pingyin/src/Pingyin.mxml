<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   creationComplete="windowedapplication1_creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			protected function windowedapplication1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				var urlLoader:URLLoader = new URLLoader();
				urlLoader.addEventListener(Event.COMPLETE, onComplete);
				urlLoader.load(new URLRequest("dict-cn.json"));
			}
			
			
/* 			const [word] = dict;
			const keys = dict[1].split(',');
			const map = {};
			
			if (!dict.length) {
				return map;
			}
			
			for (let i = 0, charCode = 0, len = word.length; i < len; i ++, charCode ++) {
				const val = word[i];
				
				// 处理偏移
				if (val < 0) {
					charCode -= val + 1;
					continue;
				}
				
				const char = String.fromCharCode(charCode);
				
				if (typeof val === 'number') {
					map[char] = [keys[val]];
				} else {
					map[char] = [];
					for (let w = 0, l = val.length; w < l; w ++) {
						map[char].push(keys[val[w]]);
					}
				}
				
			}
			
			return map; */
			protected function onComplete(event:Event):void
			{
				var dict:Array = JSON.parse(event.target.data) as Array;
				
				const word:Array = dict[0];
				
				const keys:Array = dict[1].split(',');
				
				const map:Dictionary = new Dictionary();
				
				for (var i:int = 0, charCode:uint = 0, len:uint = word.length; i < len; i ++, charCode ++) {
					const val:Object = word[i];
					
					// 处理偏移
					if (val < 0) {
						charCode -= val + 1;
						continue;
					}
					
					const char:String = String.fromCharCode(charCode);
					
					if (val is Number) {
						map[char] = [keys[val]];
					} else {
						map[char] = [];
						for (var w:int = 0, l:int = val.length; w < l; w ++) {
							map[char].push(keys[val[w]]);
						}
					}
					
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
</s:WindowedApplication>
