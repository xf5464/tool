<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="900" height="500"
					   addedToStage="onCreateComplete()">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import flash.utils.getTimer;
			
			import mx.controls.Alert;
			
			import subGame.LoadOneFile;
			import subGame.fengtian.zip.FZipLoader;
			import subGame.fengtian.zip.ZipReader;
			
			private var selectedSaveFile:File;
			
			private var shareObject:SharedObject;
			
			//怒魂
			private const SHARE_OBJECT_NAME:String = "tianfuchuanqi";
			
			private function get sourcePathKey():String
			{
				return SHARE_OBJECT_NAME + "SourcePath";
			}
			
			private function get outputPathKey():String
			{
				return SHARE_OBJECT_NAME + "OutputPath";
			}
			
			private function get configDataKey():String
			{
				return SHARE_OBJECT_NAME + "ConfigDataPath";
			}
			
			private function get caijiWebSourcePathKey():String
			{
				return SHARE_OBJECT_NAME + "WebRootText"
			}
			
			private function get caijiOutputPathKey():String
			{
				return SHARE_OBJECT_NAME + "WebOutputText";
			}
			
			private function get versionFileKey():String
			{
				return SHARE_OBJECT_NAME + "versionFileKey";
			}
			
			private function onCreateComplete():void
			{
				shareObject = SharedObject.getLocal(SHARE_OBJECT_NAME);
				
				if (shareObject.data.hasOwnProperty(caijiWebSourcePathKey))
				{
					this.webRootText.text = shareObject.data[caijiWebSourcePathKey];
					
					webRootPath = this.webRootText.text;
				}
				
				if (shareObject.data.hasOwnProperty(caijiOutputPathKey))
				{
					webOutputFile = new File(shareObject.data[caijiOutputPathKey]);
					
					this.verSourceSaveText.text = webOutputFile.nativePath;
				}
				
				if (shareObject.data.hasOwnProperty(versionFileKey))
				{
					versionFile = new File(shareObject.data[versionFileKey]);
					
					this.versionFileText.text = versionFile.nativePath;
				}
			}
			
			private var versionFile:File;
			
			private var webRootPath:String;
			
			private var webOutputFile:File;
			
			private var sourceUrl:String;
			
			
			private var outputPath:String;
			
			private var startRunTime:int;
			
			private var configFile:File;
			
			private var configLoader:URLStream;
	
			private var totalFileCount:int;
			
			private var finishedFileCount:int;
			
			private var waitFiles:Array = [];
			
			private var firstFile:File;
		
			protected function selectVersionFileOutput(event:MouseEvent):void
			{
				this.webOutputFile = new File();
				this.webOutputFile.addEventListener(Event.SELECT, onVersionOutputSelect);
				
				this.webOutputFile.browseForDirectory("选择采集输出目录");
			}
			
			protected function onVersionOutputSelect(event:Event):void
			{
				this.verSourceSaveText.text = this.webOutputFile.nativePath;
			}
			
			private function startCollection():void
			{
				if (this.webOutputFile == null)
				{
					Alert.show("输出目录为空");
					
					return;
				}
				
				if (this.versionFile == null)
				{
					Alert.show("版本文件为空");
					
					return;
				}

				shareObject.data[caijiWebSourcePathKey] = this.webRootText.text;
				
				shareObject.data[caijiOutputPathKey] = this.webOutputFile.url;
				
				shareObject.data[this.versionFileKey] = this.versionFile.url;
				
				shareObject.flush();
				
				this.setCollectionTip("开始加载版本文件");
				
				var $fs:FileStream = new FileStream();
				$fs.open(this.versionFile, FileMode.READ);
				var data:ByteArray = new ByteArray();
				$fs.readBytes(data, 0, $fs.bytesAvailable);
				$fs.close();
			
				onLoadVersionFileComlete(data);
			}
			
			
			protected function onLoadVersionFileComlete(data:ByteArray):void
			{
				this.setCollectionTip("加载版本文件完成");
				
				data.uncompress();
				
//				var errorUrl:String = "http://resbsyjstm.utogame.com/res_jstm/v1.0.0.100//uiimg/res/img/comimg/cell/生存者战袍.png?ver=e779bdec05bc91ccda5d7540d7ac296f";
				
				collectionFileUrls.length = 0;
				
				while(data.bytesAvailable > 0)
				{
					var name:String = data.readUTF();
					var versionNum:int = data.readInt();
					var size:int = data.readInt();
					
					collectionFileUrls.push([name, versionNum]);
				}
				
				totalCollectionFileCount = collectionFileUrls.length;
				
				finishedCollectionFileCount = 0;
				
				this.addEventListener(Event.ENTER_FRAME, onVersionEnterFrame);
				
	
				checkLoadCollectionFile();
			}
			
			private function checkLoadCollectionFile():void
			{
				if (this.collectionFileUrls.length > 0)
				{
					var k:Array = this.collectionFileUrls.shift();
					
					var $relativeUrl:String = k[0];
					
					var $sourcePrePath:String = this.webRootText.text;
					
					var $outputPath:String = this.webOutputFile.url + "/";
					
					loadOneFile.load($sourcePrePath + $relativeUrl + "?ver=" + k[1], $relativeUrl, $outputPath, onOneVersionLoadComplete);
					
				}
				else
				{
					this.removeEventListener(Event.ENTER_FRAME, onVersionEnterFrame);
					
					Alert.show("下载完成");
				}
			}
			
			private function onOneVersionLoadComplete():void
			{
				finishedCollectionFileCount++;
				
				checkLoadCollectionFile();
			}
			
			private function onVersionEnterFrame(e:Event):void
			{
				this.setCollectionTip("完成" + finishedCollectionFileCount + "/" + totalCollectionFileCount);
			}
			
			private var loadOneFile:LoadOneFile = new LoadOneFile();
			
			private var versioFileLoader:URLLoader;
			
			private var collectionFileUrls:Array = [];
			private var finishedCollectionFileCount:int;
			
			private var totalCollectionFileCount:int;
			
			private function setCollectionTip(value:String):void
			{
				if (value == null)
				{
					return;
				}
				
				this.collectionTip.text = value;
			}
			
			private function selectVersionFile():void
			{
				this.versionFile = new File();
				this.versionFile.addEventListener(Event.SELECT, onVersionFileSelect);
				this.versionFile.browse();
			}
			
			protected function onVersionFileSelect(event:Event):void
			{
				this.versionFileText.text = versionFile.nativePath;
			}
			
		]]>
	</fx:Script>
	
	
	<mx:VBox y="300">
		
		<mx:HBox>
			<s:Button label="选择版本文件(fileTime.xx)" click="selectVersionFile()"/>
			
			<mx:Text id="versionFileText"  width="479"/>
		</mx:HBox>
		
		<mx:HBox>
			<s:Label text="选择采集网站根目录"/>
				
			<mx:TextInput id="webRootText"  width="479" text="http://cdns.bzsc.9217web.com/bwzx/"/>
		</mx:HBox>
		
		<mx:HBox>
			<s:Button label="选择资源输出目录" click="selectVersionFileOutput(event)"/>
			
			<mx:Text id="verSourceSaveText"  width="479"/>
		</mx:HBox>
		
		<mx:HBox>
			<s:Button label="开始采集" click="startCollection()"/>
			
			<mx:Text id="collectionTip"  width="479"/>
		</mx:HBox>
	
		
	</mx:VBox>

	
</s:Group>
